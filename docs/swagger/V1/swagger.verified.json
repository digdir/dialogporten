{
  "openapi": "3.0.0",
  "info": {
    "title": "Dialogporten",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://altinn-dev-api.azure-api.net/dialogporten"
    }
  ],
  "paths": {
    "/api/v1/.well-known/oauth-authorization-server": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Gets the OAuth 2.0 Metadata for automatic configuration of clients verifying dialog tokens.",
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \"OAuth 2.0 Authorization Server\" metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "GetOauthAuthorizationServer",
        "responses": {
          "200": {
            "description": "The OAuth 2.0 Authorization Server Metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOauthAuthorizationServerDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/.well-known/jwks.json": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Gets the JSON Web Key Set (JWKS) containing the public keys used to verify dialog token signatures",
        "description": "This endpoint can be used by client integrations supporting automatic discovery of \"OAuth 2.0 Authorization Server\" metadata, enabling verification of dialog tokens issues by Dialogporten.",
        "operationId": "GetJwks",
        "responses": {
          "200": {
            "description": "The OAuth 2.0 Authorization Server Metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJwksDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog seen log record",
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "SearchDialogSeenLogSO",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Successfully returned the dialog seen log record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchDialogSeenLogDtoSO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog seen log record",
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "GetDialogSeenLogSO",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "seenLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Successfully returned the dialog seen log record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogSeenLogDtoSO"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}": {
      "put": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Replaces a dialog",
        "description": "Replaces a given dialog with the supplied model. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "ReplaceDialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateDialogDto"
                  }
                ]
              },
              "example": {
                "Progress": 42,
                "ExtendedStatus": "Some extended status",
                "ExternalReference": "Some external reference",
                "VisibleFrom": "2054-03-04T12:13:10.01344+00:00",
                "DueAt": "2084-04-04T12:13:10.01344+00:00",
                "ExpiresAt": "2095-05-04T12:13:10.01344+00:00",
                "Status": 1,
                "Content": [
                  {
                    "Type": 1,
                    "Value": [
                      {
                        "Value": "Some Title",
                        "CultureCode": "en-us"
                      }
                    ]
                  },
                  {
                    "Type": 3,
                    "Value": [
                      {
                        "Value": "Some Summary",
                        "CultureCode": "en-us"
                      }
                    ]
                  }
                ],
                "SearchTags": [
                  {
                    "Value": "searchTag"
                  },
                  {
                    "Value": "anotherSearchTag"
                  }
                ],
                "Elements": [
                  {
                    "Id": "02a72809-eddd-4192-864d-8f1755d72f4e",
                    "Type": "http://example.com/some-type",
                    "ExternalReference": null,
                    "AuthorizationAttribute": null,
                    "RelatedDialogElementId": null,
                    "DisplayName": [
                      {
                        "Value": "Some display name",
                        "CultureCode": "en-us"
                      }
                    ],
                    "Urls": [
                      {
                        "Id": "858177cb-8584-4d10-a086-3a5defa7a6c3",
                        "Url": "http://example.com/some-url",
                        "MimeType": "application/json",
                        "ConsumerType": 0
                      }
                    ]
                  }
                ],
                "GuiActions": [
                  {
                    "Id": "8c64ecc8-7678-44b2-8788-0b5852dd8fa0",
                    "Action": "submit",
                    "Url": "https://example.com/some-url",
                    "AuthorizationAttribute": null,
                    "IsBackChannel": false,
                    "IsDeleteAction": false,
                    "Priority": 1,
                    "Title": [
                      {
                        "Value": "GUI action title",
                        "CultureCode": "en-us"
                      },
                      {
                        "Value": "GUI action-tittel",
                        "CultureCode": "nb-no"
                      }
                    ]
                  }
                ],
                "ApiActions": [
                  {
                    "Id": "948b07ba-1a82-403e-8eaa-2e5784af07a9",
                    "Action": "submit",
                    "AuthorizationAttribute": null,
                    "DialogElementId": null,
                    "Endpoints": [
                      {
                        "Id": null,
                        "Version": "20231015",
                        "Url": "https://example.com/some-api-action",
                        "HttpMethod": 2,
                        "DocumentationUrl": "https://example.com/some-api-action-doc",
                        "RequestSchema": "https://example.com/some-api-action-request-schema",
                        "ResponseSchema": "https://example.com/some-api-action-response-schema",
                        "Deprecated": false,
                        "SunsetAt": null
                      }
                    ]
                  }
                ],
                "Activities": [
                  {
                    "Id": "8b95d42d-d2b6-4c01-8ca0-a817a4b3c50d",
                    "CreatedAt": null,
                    "ExtendedType": null,
                    "Type": 3,
                    "RelatedActivityId": null,
                    "DialogElementId": null,
                    "PerformedBy": [
                      {
                        "Value": "Some performer",
                        "CultureCode": "en-us"
                      },
                      {
                        "Value": "En utfører",
                        "CultureCode": "nb-no"
                      }
                    ],
                    "Description": [
                      {
                        "Value": "Some description",
                        "CultureCode": "en-us"
                      },
                      {
                        "Value": "En beskrivelse",
                        "CultureCode": "nb-no"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to update the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "204": {
            "description": "The dialog aggregate was updated successfully."
          },
          "400": {
            "description": "Validation error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID was not found or is already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog",
        "description": "Gets a single dialog aggregate. For more information see the documentation (link TBD).\n\nNote that this operation may return deleted dialogs (see the field `DeletedAt`).",
        "operationId": "GetDialogSO",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "200": {
            "description": "Successfully returned the dialog aggregate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogDtoSO"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID was not found or is already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Deletes a dialog",
        "description": "Deletes a given dialog (soft delete). For more information see the documentation (link TBD).\n\nNote that the dialog will still be available on the single details endpoint, but will have a deleted status. It will not appear on the list endpoint for either service owners nor end users.\nIf end users attempt to access the dialog via the details endpoint, they will get a 410 Gone response.\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "DeleteDialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "204": {
            "description": "The dialog aggregate was deleted successfully."
          },
          "404": {
            "description": "The given dialog ID was not found or is already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Patch a single dialog",
        "description": "Patches a dialog aggregate with a RFC6902 JSON Patch document. The patch document must be a JSON array of RFC6902 operations.\nSee [https://tools.ietf.org/html/rfc6902](https://tools.ietf.org/html/rfc6902) for more information.\n            \nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "PatchDialogs_Patch",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "If-Match",
            "x-originalName": "etag",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "patchDocument",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": "Patch was successfully applied."
          },
          "400": {
            "description": "Validation error occured. See problem details for a list of errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \\\"digdir:dialogporten.serviceprovider\\\""
          },
          "403": {
            "description": "Unauthorized to update a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)"
          },
          "404": {
            "description": "The given dialog ID was not found or is deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied Revision does not match the current Revision of the dialog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occured. See problem details for a list of errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a list of dialogs",
        "description": "Performs a search for dialogs, returning a paginated list of dialogs. For more information see the documentation (link TBD).\n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00+01:00\n* See \"continuationToken\" in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "GetDialogListSO",
        "parameters": [
          {
            "name": "serviceResource",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more service resources",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "party",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more owning parties",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "endUserId",
            "in": "query",
            "description": "Filter by end user id",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "extendedStatus",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more extended statuses",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "Filter by external reference",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by status",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DialogStatus_Values"
              }
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return dialogs created after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return dialogs created before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return dialogs updated after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return dialogs updated before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueAfter",
            "in": "query",
            "description": "Only return dialogs with due date after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueBefore",
            "in": "query",
            "description": "Only return dialogs with due date before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "visibleAfter",
            "in": "query",
            "description": "Only return dialogs with visible-from date after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "visibleBefore",
            "in": "query",
            "description": "Only return dialogs with visible-from date before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "searchCultureCode",
            "in": "query",
            "description": "Limit free text search to texts with this culture code, e.g. \\\"nb-NO\\\". Default: search all culture codes",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Supply \"continuationToken\" for the response to get the next page of results, if hasNextPage is true",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfSearchDialogDtoSO"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider.search\"."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Creates a new dialog",
        "description": "The dialog is created with the given configuration. For more information see the documentation (link TBD).\n\nFor detailed information on validation rules, see [the source for CreateDialogCommandValidator](https://github.com/digdir/dialogporten/blob/main/src/Digdir.Domain.Dialogporten.Application/Features/V1/ServiceOwner/Dialogs/Commands/Create/CreateDialogCommandValidator.cs)",
        "operationId": "CreateDialog",
        "requestBody": {
          "x-name": "CreateDialogCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to create a dialog for the given serviceResource (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "201": {
            "description": "The UUID of the created the dialog aggregate. A relative URL to the newly created activity is set in the \"Location\" header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc"
              }
            }
          },
          "400": {
            "description": "Validation error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/actions/purge": {
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Permanently deletes a dialog",
        "description": "Deletes a given dialog (hard delete). For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "PurgeDialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to delete the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "204": {
            "description": "The dialog aggregate was deleted successfully."
          },
          "404": {
            "description": "The given dialog ID was not found or is already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/elements/{elementId}": {
      "put": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Replaces a dialog element",
        "description": "Replaces a given dialog element with the supplied model. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not deleted by another request in the meantime.",
        "operationId": "ReplaceDialogElement",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateDialogElementRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDialogElementRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to update child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "204": {
            "description": "The dialog element was updated successfully."
          },
          "400": {
            "description": "Validation error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog element",
        "description": "Gets a single element belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogElementSO",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "200": {
            "description": "Successfully returned the dialog element."
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Deletes a dialog element",
        "description": "Deletes a given dialog element (hard delete). For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "DeleteDialogElement",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to delete child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "204": {
            "description": "The dialog element was deleted successfully."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/elements": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a list of dialog elements",
        "description": "Gets the list of elements belonging to a dialog",
        "operationId": "GetDialogElementListSO",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog element list.",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Creates a new dialog element",
        "description": "The dialog element is created with the given configuration. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "CreateDialogElement",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "CreateDialogElementRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogElementRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "201": {
            "description": "The UUID of the created the dialog element. A relative URL to the newly created activity is set in the \"Location\" header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "b6dc8b01-1cd8-2777-b759-d84b0e384f47"
              }
            }
          },
          "400": {
            "description": "Validation error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID was not found or is already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a list of dialog activities",
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "GetDialogActivityListSO",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity list.",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Adds a activity to a dialogs activity history",
        "description": "The activity is created with the given configuration. For more information see the documentation (link TBD).\n\nOptimistic concurrency control is implemented using the If-Match header. Supply the Revision value from the GetDialog endpoint to ensure that the dialog is not modified/deleted by another request in the meantime.",
        "operationId": "CreateDialogActivity",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "if-Match",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "CreateDialogActivityRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogActivityRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to create child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "201": {
            "description": "The UUID of the created the dialog activity. A relative URL to the newly created activity is set in the \"Location\" header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "018bb8e5-d9d0-7434-8ec5-569a6c8e01fc"
              }
            }
          },
          "400": {
            "description": "Validation error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID was not found or is already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "The supplied If-Match header did not match the current Revision value for the dialog. The request was not applied.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Domain error occured. See problem details for a list of errors.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/serviceowner/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "tags": [
          "Serviceowner"
        ],
        "summary": "Gets a single dialog activity",
        "description": "Gets a single activity belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogActivitySO",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten.serviceprovider\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "200": {
            "description": "Successfully returned the dialog activity."
          },
          "404": {
            "description": "The given dialog ID was not found or was deleted, or the given activity ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog seen log record",
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "SearchDialogSeenLog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Successfully returned the dialog seen log record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchDialogSeenLogDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/seenlog/{seenLogId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog seen log record",
        "description": "Gets a single dialog seen log record. For more information see the documentation (link TBD).",
        "operationId": "GetDialogSeenLog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "seenLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Successfully returned the dialog seen log record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogSeenLogDto"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a list of dialogs",
        "description": "Performs a search for dialogs, returning a paginated list of dialogs. For more information see the documentation (link TBD).\n\n* All date parameters must contain explicit time zone. Example: 2023-10-27T10:00:00Z or 2023-10-27T10:00:00+01:00\n* See \"continuationToken\" in the response for how to get the next page of results.\n* hasNextPage will be set to true if there are more items to get.",
        "operationId": "GetDialogList",
        "parameters": [
          {
            "name": "org",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more service owner codes",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "serviceResource",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more service resources",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "party",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more owning parties",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "extendedStatus",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by one or more extended statuses",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "externalReference",
            "in": "query",
            "description": "Filter by external reference",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "Filter by status",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/DialogStatus_Values"
              }
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Only return dialogs created after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Only return dialogs created before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "description": "Only return dialogs updated after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "description": "Only return dialogs updated before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueAfter",
            "in": "query",
            "description": "Only return dialogs with due date after this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "dueBefore",
            "in": "query",
            "description": "Only return dialogs with due date before this date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search string for free text search. Will attempt to fuzzily match in all free text fields in the aggregate",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "searchCultureCode",
            "in": "query",
            "description": "Limit free text search to texts with this culture code, e.g. \\\"nb-NO\\\". Default: search all culture codes",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OrderSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Supply \"continuationToken\" for the response to get the next page of results, if hasNextPage is true",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContinuationTokenSetOfTOrderDefinitionAndTTarget"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of results per page (1-1000, default: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfSearchDialogDto"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog",
        "description": "Gets a single dialog aggregate. For more information see the documentation (link TBD).",
        "operationId": "GetDialog",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          },
          "200": {
            "description": "Successfully returned the dialog aggregate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogDto"
                }
              }
            }
          },
          "404": {
            "description": "The given dialog ID was not found or is already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/elements": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a list of dialog elements",
        "description": "Gets the list of elements belonging to a dialog",
        "operationId": "GetDialogElementList",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog element list.",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/elements/{elementId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog element",
        "description": "Gets a single element belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogElement",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "elementId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "200": {
            "description": "Successfully returned the dialog element."
          },
          "404": {
            "description": "The given dialog ID or dialog element ID was not found or was already deleted.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a list of dialog activities",
        "description": "Gets the list of activities belonging to a dialog",
        "operationId": "GetDialogActivityList",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the dialog activity list.",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get the supplied dialog (not owned by authenticated organization or has additional scope requirements defined in policy)."
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/v1/enduser/dialogs/{dialogId}/activities/{activityId}": {
      "get": {
        "tags": [
          "Enduser"
        ],
        "summary": "Gets a single dialog activity",
        "description": "Gets a single activity belonging to a dialog. For more information see the documentation (link TBD).",
        "operationId": "GetDialogActivity",
        "parameters": [
          {
            "name": "dialogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Missing or invalid authentication token. Requires a Maskinporten-token with the scope \"digdir:dialogporten\"."
          },
          "403": {
            "description": "Unauthorized to get child entity for the given dialog (dialog not owned by authenticated organization or has additional scope requirements defined in service identifiers policy)."
          },
          "200": {
            "description": "Successfully returned the dialog activity."
          },
          "404": {
            "description": "The given dialog ID was not found or was deleted, or the given activity ID was not found.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "GetOauthAuthorizationServerDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "issuer": {
            "type": "string"
          },
          "jwks_uri": {
            "type": "string"
          }
        }
      },
      "GetJwksDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Jwk"
            }
          }
        }
      },
      "Jwk": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "kty": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "crv": {
            "type": "string"
          },
          "x": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          }
        }
      },
      "SearchDialogSeenLogDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
          },
          "title": {
            "type": "string",
            "default": "One or more validation errors occurred."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "default": 400
          },
          "instance": {
            "type": "string",
            "default": "/api/route"
          },
          "traceId": {
            "type": "string",
            "default": "0HMPNHL0JHL76:00000001"
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            }
          }
        }
      },
      "ProblemDetails_Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "default": "Error or field name"
          },
          "reason": {
            "type": "string",
            "default": "Error reason"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetDialogSeenLogDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateDialogRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dto": {
            "$ref": "#/components/schemas/UpdateDialogDto"
          }
        }
      },
      "UpdateDialogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "progress": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogContentDto"
            }
          },
          "searchTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogSearchTagDto"
            }
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogElementDto"
            }
          },
          "guiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogGuiActionDto"
            }
          },
          "apiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogApiActionDto"
            }
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogActivityDto"
            }
          }
        }
      },
      "DialogStatus_Values": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "New",
          "InProgress",
          "Waiting",
          "Signing",
          "Cancelled",
          "Completed"
        ],
        "enum": [
          "New",
          "InProgress",
          "Waiting",
          "Signing",
          "Cancelled",
          "Completed"
        ]
      },
      "UpdateDialogContentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DialogContentType_Values"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "DialogContentType_Values": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Title",
          "SenderName",
          "Summary",
          "AdditionalInfo",
          "ExtendedStatus"
        ],
        "enum": [
          "Title",
          "SenderName",
          "Summary",
          "AdditionalInfo",
          "ExtendedStatus"
        ]
      },
      "LocalizationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          },
          "cultureCode": {
            "type": "string"
          }
        }
      },
      "UpdateDialogSearchTagDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "UpdateDialogDialogElementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "relatedDialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "displayName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogElementUrlDto"
            }
          }
        }
      },
      "UpdateDialogDialogElementUrlDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "consumerType": {
            "$ref": "#/components/schemas/DialogElementUrlConsumerType_Values"
          }
        }
      },
      "DialogElementUrlConsumerType_Values": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Gui",
          "Api"
        ],
        "enum": [
          "Gui",
          "Api"
        ]
      },
      "UpdateDialogDialogGuiActionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "action": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "isBackChannel": {
            "type": "boolean"
          },
          "isDeleteAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "title": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "DialogGuiActionPriority_Values": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Primary",
          "Secondary",
          "Tertiary"
        ],
        "enum": [
          "Primary",
          "Secondary",
          "Tertiary"
        ]
      },
      "UpdateDialogDialogApiActionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogApiActionEndpointDto"
            }
          }
        }
      },
      "UpdateDialogDialogApiActionEndpointDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "documentationUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean"
          },
          "sunsetAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "HttpVerb_Values": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ],
        "enum": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "HEAD",
          "OPTIONS",
          "TRACE",
          "CONNECT"
        ]
      },
      "UpdateDialogDialogActivityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          },
          "relatedActivityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "DialogActivityType_Values": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Submission",
          "Feedback",
          "Information",
          "Error",
          "Closed",
          "Forwarded"
        ],
        "enum": [
          "Submission",
          "Feedback",
          "Information",
          "Error",
          "Closed",
          "Forwarded"
        ]
      },
      "PaginatedListOfSearchDialogDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDialogDtoSO"
            }
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "continuationToken": {
            "type": "string",
            "nullable": true
          },
          "orderBy": {
            "type": "string"
          }
        }
      },
      "SearchDialogDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "org": {
            "type": "string"
          },
          "serviceResource": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "endUserId": {
            "type": "string",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDialogContentDtoSO"
            }
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDialogDialogSeenLogDtoSO"
            }
          }
        }
      },
      "SearchDialogContentDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DialogContentType_Values"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "SearchDialogDialogSeenLogDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "GetDialogDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "revision": {
            "type": "string",
            "format": "guid"
          },
          "org": {
            "type": "string"
          },
          "serviceResource": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogContentDtoSO"
            }
          },
          "searchTags": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetDialogSearchTagDtoSO"
            }
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogElementDtoSO"
            }
          },
          "guiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogGuiActionDtoSO"
            }
          },
          "apiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionDtoSO"
            }
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogActivityDtoSO"
            }
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogSeenLogDtoSO"
            }
          }
        }
      },
      "OrderSetOfTOrderDefinitionAndTTarget": {},
      "ContinuationTokenSetOfTOrderDefinitionAndTTarget": {},
      "GetDialogContentDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DialogContentType_Values"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "GetDialogSearchTagDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "GetDialogDialogElementDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "relatedDialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "displayName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogElementUrlDtoSO"
            }
          }
        }
      },
      "GetDialogDialogElementUrlDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "consumerType": {
            "$ref": "#/components/schemas/DialogElementUrlConsumerType_Values"
          }
        }
      },
      "GetDialogDialogGuiActionDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "action": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "isBackChannel": {
            "type": "boolean"
          },
          "isDeleteAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "title": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "GetDialogDialogApiActionDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionEndpointDtoSO"
            }
          }
        }
      },
      "GetDialogDialogApiActionEndpointDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "documentationUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean"
          },
          "sunsetAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "GetDialogDialogActivityDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          },
          "relatedActivityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "GetDialogDialogSeenLogDtoSO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CreateDialogCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "serviceResource": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogContentDto"
            }
          },
          "searchTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogSearchTagDto"
            }
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogElementDto"
            }
          },
          "guiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogGuiActionDto"
            }
          },
          "apiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogApiActionDto"
            }
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogActivityDto"
            }
          }
        }
      },
      "CreateDialogContentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DialogContentType_Values"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "CreateDialogSearchTagDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "CreateDialogDialogElementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "relatedDialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "displayName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogElementUrlDto"
            }
          }
        }
      },
      "CreateDialogDialogElementUrlDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "consumerType": {
            "$ref": "#/components/schemas/DialogElementUrlConsumerType_Values"
          }
        }
      },
      "CreateDialogDialogGuiActionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "isBackChannel": {
            "type": "boolean"
          },
          "isDeleteAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "title": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "CreateDialogDialogApiActionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDialogDialogApiActionEndpointDto"
            }
          }
        }
      },
      "CreateDialogDialogApiActionEndpointDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "documentationUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean"
          },
          "sunsetAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateDialogDialogActivityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          },
          "relatedActivityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "UpdateDialogElementRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "relatedDialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "displayName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogElementUrlDto"
            }
          }
        }
      },
      "CreateDialogElementRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "relatedDialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "displayName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDialogDialogElementUrlDto"
            }
          }
        }
      },
      "CreateDialogActivityRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          },
          "relatedActivityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "SearchDialogSeenLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean"
          }
        }
      },
      "GetDialogSeenLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean"
          }
        }
      },
      "PaginatedListOfSearchDialogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDialogDto"
            }
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "continuationToken": {
            "type": "string",
            "nullable": true
          },
          "orderBy": {
            "type": "string"
          }
        }
      },
      "SearchDialogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "org": {
            "type": "string"
          },
          "serviceResource": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guiAttachmentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "latestActivity": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SearchDialogDialogActivityDto"
              }
            ]
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDialogContentDto"
            }
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchDialogDialogSeenLogDto"
            }
          }
        }
      },
      "SearchDialogDialogActivityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          },
          "relatedActivityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "SearchDialogContentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DialogContentType_Values"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "SearchDialogDialogSeenLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean"
          }
        }
      },
      "GetDialogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "revision": {
            "type": "string",
            "format": "guid"
          },
          "org": {
            "type": "string"
          },
          "serviceResource": {
            "type": "string"
          },
          "party": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedStatus": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "visibleFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/DialogStatus_Values"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogContentDto"
            }
          },
          "dialogToken": {
            "type": "string",
            "nullable": true
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogElementDto"
            }
          },
          "guiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogGuiActionDto"
            }
          },
          "apiActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionDto"
            }
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogActivityDto"
            }
          },
          "seenSinceLastUpdate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogSeenLogDto"
            }
          }
        }
      },
      "GetDialogContentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DialogContentType_Values"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "GetDialogDialogElementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "isAuthorized": {
            "type": "boolean"
          },
          "relatedDialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "displayName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogElementUrlDto"
            }
          }
        }
      },
      "GetDialogDialogElementUrlDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "consumerType": {
            "$ref": "#/components/schemas/DialogElementUrlConsumerType_Values"
          }
        }
      },
      "GetDialogDialogGuiActionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "action": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "isAuthorized": {
            "type": "boolean"
          },
          "isBackChannel": {
            "type": "boolean"
          },
          "isDeleteAction": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/DialogGuiActionPriority_Values"
          },
          "title": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "GetDialogDialogApiActionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "action": {
            "type": "string"
          },
          "authorizationAttribute": {
            "type": "string",
            "nullable": true
          },
          "isAuthorized": {
            "type": "boolean"
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDialogDialogApiActionEndpointDto"
            }
          }
        }
      },
      "GetDialogDialogApiActionEndpointDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "httpMethod": {
            "$ref": "#/components/schemas/HttpVerb_Values"
          },
          "documentationUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "requestSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "responseSchema": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean"
          },
          "sunsetAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "GetDialogDialogActivityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "extendedType": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DialogActivityType_Values"
          },
          "relatedActivityId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dialogElementId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "performedBy": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationDto"
            }
          }
        }
      },
      "GetDialogDialogSeenLogDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endUserIdHash": {
            "type": "string"
          },
          "endUserName": {
            "type": "string",
            "nullable": true
          },
          "isCurrentEndUser": {
            "type": "boolean"
          }
        }
      },
      "Operation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        }
      },
      "OperationType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ],
        "enum": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ]
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
